[lib]
path = "src/_lib.rs"

[package]
name = "safer-ffi"
version = "0.0.1-alpha-2.0"
authors = ["Daniel Henry-Mantilla <daniel.henry.mantilla@gmail.com>"]
edition = "2018"

description = "#[repr(C)] equivalents of stdlib pervasive types for easier FFI"
license = "MIT"

[features]
default = [
    "std",
]

nightly = []

alloc = []
std = [ "alloc" ]

derives = ["proc_macros"] # alias
proc_macros = [
    "proc_macro/proc_macros",
    "require_unsafe_in_body",
    "proc-macro-hack",
]
debug_proc_macros = [
    "proc_macros",
    "proc_macro/verbose-expansions",
]

out-refs = ["uninit"]

headers = [
    "inventory",
    "proc_macro/headers",
    "std",
]

[dev-dependencies]
macro_rules_attribute = "0.0.1"

[target.'cfg(not(target = "wasm32-unknown-unknown"))'.dependencies]
libc = { version = "0.2.66", default-features = false }

[dependencies]
paste = { package = "mini_paste", version = "0.1.*" }
log = { version = "0.4.8", optional = true }
require_unsafe_in_body = { version = "0.2.1", optional = true }
inventory = { version = "0.1.6", optional = true }
proc-macro-hack = { version = "0.5.15", optional = true }

[dependencies.proc_macro]
package = "safer_ffi-proc_macro"
path = "src/proc_macro"
version = "0.0.1-alpha-2.0"  # Keep in sync with main version and proc-macros

[dependencies.uninit]
optional = true
# Since we are relying on internals of their `Out` reference,
# we pin the version.
version = "=0.3.0"
default-features = false

[workspace]
members = ["src/proc_macro"]
exclude = ["ffi_tests"]
